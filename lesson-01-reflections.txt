**How did viewing a diff between two versions of a file help you see the bug that was introduced?**
# Helps you easily see changes that were made.
 

**How could having easy access to the entire history of a file make you a more efficient programmer in the long term?**
# Debug more quickly. 
# Undo breaking changes. 
# Understand why things were done the way they were, things that were tried. Context.


**What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?**
# +Reduces unnecessary/non-useful commits
# -Prone to human error


**Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?**
# Different use case. 
# Files that work independently vs as a whole. 


**How can you use the commands git log and git diff to view the history of files?**
# 


**How might using version control make you more confident to make changes that could break something?**
# View changes before committing. 
# You can always revert if you break something. 


**Now that you have your workspace set up, what do you want to try using Git for?**
# Check changes pre-commit
# Debug
# Exploration


**What happens when you initialize a repository? Why do you need to do it?**
# Starts tracking versions. 
# 

